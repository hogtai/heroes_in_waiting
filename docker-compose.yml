version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: heroes_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: heroes_in_waiting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: heroespassword123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - heroes_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgBouncer Connection Pooling
  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: heroes_pgbouncer
    restart: unless-stopped
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=heroespassword123
      - DB_NAME=heroes_in_waiting
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=20
      - RESERVE_POOL_SIZE=5
      - RESERVE_POOL_TIMEOUT=5
      - MAX_DB_CONNECTIONS=50
      - MAX_USER_CONNECTIONS=100
      - SERVER_RESET_QUERY=DISCARD ALL
      - SERVER_CHECK_QUERY=SELECT 1
      - SERVER_CHECK_DELAY=30
    ports:
      - "6432:5432"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - heroes_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    container_name: heroes_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - heroes_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Heroes in Waiting API
  api:
    build: .
    container_name: heroes_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: pgbouncer
      DB_PORT: 5432
      DB_NAME: heroes_in_waiting
      DB_USER: postgres
      DB_PASSWORD: heroespassword123
      DB_POOL_MIN: 2
      DB_POOL_MAX: 10
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
      CORS_ORIGIN: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      LOG_LEVEL: info
      API_DOCS_ENABLED: true
      BCRYPT_SALT_ROUNDS: 12
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      pgbouncer:
        condition: service_healthy
    networks:
      - heroes_network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: heroes_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - heroes_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  heroes_network:
    driver: bridge